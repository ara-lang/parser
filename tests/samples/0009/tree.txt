DefinitionTree {
    definitions: [
        Function(
            FunctionDefinition {
                attributes: [],
                comments: CommentGroup {
                    comments: [],
                },
                modifiers: None,
                function: Keyword {
                    value: "function",
                    position: 0,
                },
                name: Identifier {
                    position: 9,
                    value: "main",
                },
                templates: None,
                parameters: FunctionLikeParameterListDefinition {
                    comments: CommentGroup {
                        comments: [],
                    },
                    left_parenthesis: 13,
                    parameters: CommaSeparated {
                        inner: [],
                        commas: [],
                    },
                    right_parenthesis: 14,
                },
                return_type: FunctionLikeReturnTypeDefinition {
                    colon: 15,
                    type_definition: Void(
                        Keyword {
                            value: "void",
                            position: 17,
                        },
                    ),
                },
                body: BlockStatement {
                    comments: CommentGroup {
                        comments: [],
                    },
                    left_brace: 22,
                    statements: [
                        Break(
                            BreakStatement {
                                comments: CommentGroup {
                                    comments: [],
                                },
                                break: Keyword {
                                    value: "break",
                                    position: 28,
                                },
                                level: Some(
                                    LiteralInteger {
                                        comments: CommentGroup {
                                            comments: [],
                                        },
                                        value: "2",
                                        position: 34,
                                    },
                                ),
                                semicolon: 35,
                            },
                        ),
                    ],
                    right_brace: 37,
                },
            },
        ),
    ],
    eof: 38,
}