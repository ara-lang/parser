DefinitionTree {
    definitions: [
        Function(
            FunctionDefinition {
                attributes: [],
                comments: CommentGroup {
                    comments: [],
                },
                modifiers: ModifierGroupDefinition {
                    position: 0,
                    modifiers: [],
                },
                function: Keyword {
                    value: "function",
                    position: 0,
                },
                name: Identifier {
                    position: 9,
                    value: "main",
                },
                templates: None,
                parameters: FunctionLikeParameterListDefinition {
                    comments: CommentGroup {
                        comments: [],
                    },
                    left_parenthesis: 13,
                    parameters: CommaSeparated {
                        inner: [],
                        commas: [],
                    },
                    right_parenthesis: 14,
                },
                return_type: FunctionLikeReturnTypeDefinition {
                    colon: 15,
                    type_definition: Void(
                        Keyword {
                            value: "void",
                            position: 17,
                        },
                    ),
                },
                body: BlockStatement {
                    comments: CommentGroup {
                        comments: [],
                    },
                    left_brace: 22,
                    statements: [
                        Expression(
                            ExpressionStatement {
                                comments: CommentGroup {
                                    comments: [],
                                },
                                expression: ObjectOperation(
                                    PropertyFetch {
                                        comments: CommentGroup {
                                            comments: [],
                                        },
                                        object: Variable(
                                            Variable {
                                                position: 28,
                                                name: "$foo",
                                            },
                                        ),
                                        arrow: 32,
                                        property: Identifier {
                                            position: 34,
                                            value: "bar",
                                        },
                                    },
                                ),
                                semicolon: 37,
                            },
                        ),
                        Expression(
                            ExpressionStatement {
                                comments: CommentGroup {
                                    comments: [],
                                },
                                expression: ObjectOperation(
                                    PropertyFetch {
                                        comments: CommentGroup {
                                            comments: [],
                                        },
                                        object: ObjectOperation(
                                            PropertyFetch {
                                                comments: CommentGroup {
                                                    comments: [],
                                                },
                                                object: Variable(
                                                    Variable {
                                                        position: 43,
                                                        name: "$foo",
                                                    },
                                                ),
                                                arrow: 47,
                                                property: Identifier {
                                                    position: 49,
                                                    value: "bar",
                                                },
                                            },
                                        ),
                                        arrow: 52,
                                        property: Identifier {
                                            position: 54,
                                            value: "baz",
                                        },
                                    },
                                ),
                                semicolon: 57,
                            },
                        ),
                    ],
                    right_brace: 59,
                },
            },
        ),
    ],
    eof: 61,
}